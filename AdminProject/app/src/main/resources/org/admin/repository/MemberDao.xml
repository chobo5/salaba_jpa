<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.admin.repository.MemberDao">
    <resultMap id="MemberMap" type="Member">
        <id column="member_no" property="memberNo"/>
        <result column="nation_no" property="nationNo"/>
        <result column="email" property="email"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="nickname" property="nickname"/>
        <result column="birthday" property="birthday"/>
        <result column="tel_no" property="tel"/>
        <result column="grade_no" property="gradeNo"/>
        <result column="grade_name" property="gradeName"/>
        <result column="state" property="state"/>
        <result column="address" property="address"/>
        <result column="sex" property="sex"/>
        <result column="join_date" property="joinDate"/>
        <result column="last_login_date" property="lastLoginDate"/>
        <result column="exit_date" property="exitDate"/>
        <result column="warning_count" property="warningCount"/>
        <result column="photo" property="photo"/>
        <result column="rental_count" property="rentalCount"/>

        <association property="roles" javaType="Role">
            <id column="role_no" property="roleNo"/>
            <result column="role_name" property="roleName"/>
        </association>

        <collection property="rentals" ofType="Rental">
            <id column="rental_home_no" property="rentalNo"/>
            <result column="rental_name" property="name"/>
            <result column="address" property="address"/>
            <result column="price" property="price"/>
            <result column="state" property="state"/>
            <result column="registe_date" property="regDate"/>

            <collection property="themes" ofType="Theme">
                <id column="theme_no" property="themeNo"/>
                <result column="theme_name" property="themeName"/>
            </collection>
        </collection>
    </resultMap>

    <select id="findAll" resultMap="MemberMap">
        SELECT
            member_no,
            name,
            email,
            nickname,
            tel_no,
            join_date,
            state
        FROM member
    </select>

    <select id="findAllHosts" resultMap="MemberMap">
        SELECT
            m.member_no,
            m.name,
            m.email,
            m.nickname,
            m.tel_no,
            m.join_date,
            m.state,
            (
            select
            count(rh.rental_home_no)
            from
            rental_home rh
            where m.member_no = rh.member_no
            ) as rental_count
        FROM member m
        WHERE
        (
            SELECT COUNT(rh.rental_home_no)
            FROM rental_home rh
            WHERE m.member_no = rh.member_no
        ) > 0;
    </select>

    <select id="findMemberBy" resultMap="MemberMap">
        SELECT
            m.member_no,
            m.name,
            m.nickname,
            m.email,
            m.join_date,
            m.grade_no,
            g.grade_name,
            m.state,
            m.warning_count
        FROM member m
        INNER JOIN grade g ON m.grade_no = g.grade_no
        WHERE member_no = #{memberNo}
    </select>

    <select id="findHostBy" resultMap="MemberMap">
    <![CDATA[
        SELECT
            m.member_no,
            m.name,
            m.nickname,
            m.email,
            m.join_date,
            m.grade_no,
            g.grade_name,
            m.state,
            m.warning_count,
            rh.rental_home_no,
            rh.name as rental_name,
            rh.address,
            rh.price,
            rh.state,
            rh.registe_date,
            rht.theme_no,
            t.theme_name
        FROM member m
        INNER JOIN grade g ON m.grade_no = g.grade_no
        INNER JOIN rental_home rh ON m.member_no = rh.member_no
        INNER JOIN rental_home_theme rht ON rh.rental_home_no = rht.rental_home_no
        INNER JOIN theme t ON rht.theme_no = t.theme_no
        WHERE m.member_no = #{memberNo}
        AND rht.theme_no < 10;
    ]]>
    </select>

    <update id="updateWarningCountBy">
        UPDATE member
        SET warning_count = warning_count + 1
        WHERE member_no = (
        SELECT member_no
        FROM board_report_detail
        WHERE report_no = #{reportNo}
        );
    </update>

    <update id="updateWarningCount">
        UPDATE member
        SET warning_count = warning_count + 1
        WHERE member_no = #{memberNo};
    </update>

    <select id="findMemberByName" resultMap="MemberMap">
        SELECT
        member_no,
        name,
        email,
        nickname,
        tel_no,
        join_date,
        state
        FROM member
        WHERE name like '%${keyword}%'
    </select>

    <select id="findMemberByEmail" resultMap="MemberMap">
        SELECT
        member_no,
        name,
        email,
        nickname,
        tel_no,
        join_date,
        state
        FROM member
        WHERE email like '%${keyword}%'
    </select>

    <select id="findHostByName" resultMap="MemberMap">
        SELECT
        m.member_no,
        m.name,
        m.email,
        m.nickname,
        m.tel_no,
        m.join_date,
        m.state,
        (
        select
        count(rh.rental_home_no)
        from
        rental_home rh
        where m.member_no = rh.member_no
        ) as rental_count
        FROM member m
        WHERE
        (
        SELECT COUNT(rh.rental_home_no)
        FROM rental_home rh
        WHERE m.member_no = rh.member_no
        ) > 0
        AND name like '%${keyword}%'
    </select>

    <select id="findHostByEmail" resultMap="MemberMap">
        SELECT
        m.member_no,
        m.name,
        m.email,
        m.nickname,
        m.tel_no,
        m.join_date,
        m.state,
        (
        select
        count(rh.rental_home_no)
        from
        rental_home rh
        where m.member_no = rh.member_no
        ) as rental_count
        FROM member m
        WHERE
        (
        SELECT COUNT(rh.rental_home_no)
        FROM rental_home rh
        WHERE m.member_no = rh.member_no
        ) > 0
        AND email like '%${keyword}%'
    </select>

    <update id="updateGrade">
        UPDATE member set grade_no = #{gradeNo}
        WHERE member_no = #{memberNo}
    </update>

    <insert id="add" parameterType="Member"
            useGeneratedKeys="true" keyColumn="member_no" keyProperty="memberNo">
        INSERT INTO member(name, email, password, nickname, birthday)
        VALUES(#{name}, #{email},#{password},#{name}, '2023-11-14')
    </insert>

    <select id="findByEmailAndPassword" resultMap="MemberMap">
        SELECT member_no, email,  FROM member
        WHERE email = #{email} AND password = #{password}
    </select>

    <select id="findByEmail" resultMap="MemberMap">
        SELECT
            member_no,
            email,
            name,
            password,
            join_date
        FROM member
        WHERE email like '${email}'
    </select>
</mapper>